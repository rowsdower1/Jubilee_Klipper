###########################################
# Tool docking macros                     #
###########################################

#Tool docking init
[gcode_macro DOCK_INIT]
variable_tool_present:False
variable_tool_zone_x:0
variable_tool_zone_y:0
variable_tool_park_x:0
variable_tool_park_y:0
variable_tool_home_x:None
variable_tool_home_y:None
gcode:

# Tool Home is used to set a return location after performing a tool pickup.
# Otherwise the default behaviour is to return to the location the prior tool was in.
[gcode_macro TOOL_HOME]
gcode:
	{% set HOME = params.HOME|default(None)|float %}
	{% if HOME %}
		{% set home=HOME.split(',') %}
		SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_home_x VALUE={ home[0]|float }
		SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_home_y VALUE={ home[1]|float }
	{% endif %}
	
#TOOL_PICKUP will move to the defined ZONE, 
[gcode_macro TOOL_PICKUP]
gcode:
	{% set ZONE_X = params.ZONE_X|default(0)|float %}
	{% set ZONE_Y = params.ZONE_Y|default(0)|float %}
	{% set PARK_X = params.PARK_X|default(0)|float %}
	{% set PARK_Y = params.PARK_Y|default(0)|float %}
	{% set OFFSET_X = params.OFFSET_X|default(0)|float %}
	{% set OFFSET_Y = params.OFFSET_Y|default(0)|float %}
	{% set OFFSET_Z = params.OFFSET_Z|default(5)|float %}
	SAVE_GCODE_STATE NAME=tool_pickup_state
	#Drop the Z 1.5mm relative
	G91;
	G1 Z1.5;
	#Set us back to absolute mode. 
	G90;
	{% if printer["gcode_macro DOCK_INIT"].tool_present %}
		#If we have a tool, drop it off
		TOOL_DROPOFF
	{% else %}
		#If we don't have a tool but the lock is engaged, unlock it.
		TOOL_UNLOCK
	{% endif %}
	#Move to tool zone.
	G1 X{ZONE_X} Y{ZONE_Y} F30000;
	#Park tool on posts.
	G1 X{PARK_X} Y{PARK_Y} F7200;
	#Lock Tool in place
	TOOL_LOCK
	#Move to tool zone.
	G1 X{ZONE_X} Y{ZONE_Y} F7200;
	#Save the state so we can drop the tool later.
	SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_zone_x VALUE={ZONE_X}
	SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_zone_y VALUE={ZONE_Y}
	SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_park_x VALUE={PARK_X}
	SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_park_y VALUE={PARK_Y}
	#Mark that we have a tool.
	SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_present VALUE=True;
	#Restore Gcode and set tool Offsets
	RESTORE_GCODE_STATE NAME=tool_pickup_state
	SET_GCODE_OFFSET X={OFFSET_X} Y={OFFSET_Y} Z={OFFSET_Z}

[gcode_macro TOOL_DROPOFF]
gcode:
	SAVE_GCODE_STATE NAME=tool_dropoff_state
	{% if printer["gcode_macro DOCK_INIT"].tool_present %}
		SET_GCODE_OFFSET X=0 Y=0 Z=0
		#Drop the Z 1.5mm relative
		G91;
		G1 Z1.5;
		#Set us back to absolute mode. 
		G90;
		#Move to tool zone.
		G1 X{printer["gcode_macro DOCK_INIT"].tool_zone_x} Y{printer["gcode_macro DOCK_INIT"].tool_zone_y} F30000;
		#Park tool on posts.
		G1 X{printer["gcode_macro DOCK_INIT"].tool_park_x} Y{printer["gcode_macro DOCK_INIT"].tool_park_y} F7200;
		#Unlock
		TOOL_UNLOCK
		#Move to tool zone.
		G1 X{printer["gcode_macro DOCK_INIT"].tool_zone_x} Y{printer["gcode_macro DOCK_INIT"].tool_zone_y} F7200;
		#Set variable to indicate that tool is not present.
		SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_present VALUE=False;
	{% endif %}
	RESTORE_GCODE_STATE NAME=tool_dropoff_state
	SET_GCODE_OFFSET X=0 Y=0 Z=0

###########################################
# Locking macros                          #
###########################################

[gcode_macro LOCK_INIT]
variable_lock_state: True
gcode:
	SET_GCODE_VARIABLE MACRO=LOCK_INIT VARIABLE=lock_state VALUE=False
	TOOL_LOCK
	TOOL_UNLOCK

[gcode_macro TOOL_UNLOCK]
gcode:
	{% if printer["gcode_macro LOCK_INIT"].lock_state %}
	SAVE_GCODE_STATE NAME=tool_lock_state
	MANUAL_STEPPER STEPPER=tool_lock SET_POSITION=0
	MANUAL_STEPPER STEPPER=tool_lock Move=2 SPEED=10 STOP_ON_ENDSTOP=-2
	MANUAL_STEPPER STEPPER=tool_lock Move=55 SPEED=50 STOP_ON_ENDSTOP=2
	MANUAL_STEPPER STEPPER=tool_lock SET_POSITION=55
	SET_GCODE_VARIABLE MACRO=LOCK_INIT VARIABLE=lock_state VALUE=False
	RESTORE_GCODE_STATE NAME=tool_lock_state
	{% endif %}

[gcode_macro TOOL_LOCK]
gcode:
	{% if not printer["gcode_macro LOCK_INIT"].lock_state %}
	SAVE_GCODE_STATE NAME=tool_unlock_state
	SET_TMC_CURRENT STEPPER=tool_lock CURRENT=0.57 HOLDCURRENT=0.28 #temporarily changes the current to avoid motor stalling
	MANUAL_STEPPER STEPPER=tool_lock SET_POSITION=55
	MANUAL_STEPPER STEPPER=tool_lock Move=53 SPEED=10 STOP_ON_ENDSTOP=-2
	MANUAL_STEPPER STEPPER=tool_lock Move=0 SPEED=50 STOP_ON_ENDSTOP=2
	MANUAL_STEPPER STEPPER=tool_lock SET_POSITION=0
	SET_TMC_CURRENT STEPPER=tool_lock CURRENT=0.47 HOLDCURRENT=0.28 #sets current back to normal level
	SET_GCODE_VARIABLE MACRO=LOCK_INIT VARIABLE=lock_state VALUE=True
	RESTORE_GCODE_STATE NAME=tool_unlock_state
	{% endif %}

[gcode_macro RESET_TOOL_STATE]
gcode:
	SET_GCODE_VARIABLE MACRO=DOCK_INIT VARIABLE=tool_present VALUE=False;

###########################################
# Misc Jubilee macros                     #
###########################################

[gcode_macro INIT]
gcode:
    {% if not printer["gcode_macro DOCK_INIT"].tool_present %}
        g28
        z_tilt_adjust
		g28 Z
		G90
		G1 Z3
        LOCK_INIT
		DOCK_INIT
        PEBBLE_INIT
    {% else %}
        { action_respond_info("You cannot run INIT with a tool in place, please run TOOL_UNLOCK and manually place the tool in its dock.") }
    {% endif %}

[gcode_macro DUMP_VARS]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% endfor %}
   {% endfor %}

[gcode_macro G28]
rename_existing:    G28.1
gcode:
    {%set p=[] %}    
    {% for key in params %}
        {% if key != 'G' %}
            {% set p = p.append(key + params[key])  %}
        {% endif %}
    {% endfor %}
	{% if not printer["gcode_macro DOCK_INIT"].tool_present%}
		G28.1 { p|join(" ") }
	{% else %}
	    { action_respond_info("You attemped to home while a tool is present") }
	{% endif %}