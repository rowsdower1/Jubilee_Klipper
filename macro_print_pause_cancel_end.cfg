[gcode_macro SET_VARS]
variable_fltemp0:0
variable_fltemp1:0
variable_fltemp2:0
variable_fltemp3:0
variable_temp0:0
variable_temp1:0
variable_temp2:0
variable_temp3:0
variable_standby0:0
variable_standby1:0
variable_standby2:0
variable_standby3:0
variable_flbed0:0
variable_flbed1:0
variable_flbed2:0
variable_flbed3:0
variable_bed0:0
variable_bed1:0
variable_bed2:0
variable_bed3:0
variable_chamber0:0
variable_chamber1:0
variable_chamber2:0
variable_chamber3:0
variable_filtype0:0
variable_filtype1:0
variable_filtype2:0
variable_filtype3:0
variable_maxfan0:0
variable_maxfan1:0
variable_maxfan2:0
variable_maxfan3:0
variable_disablefan0:0
variable_disablefan1:0
variable_disablefan2:0
variable_disablefan3:0
variable_first_tool:0
gcode:

    {% set fltemp = params.FLTEMP|default(0)|string %}
    	{% set fltemp=fltemp.split(',') %}
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=fltemp0 VALUE={ fltemp[0]|float }
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=fltemp1 VALUE={ fltemp[1]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=fltemp2 VALUE={ fltemp[2]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=fltemp3 VALUE={ fltemp[3]|float }

    {% set temp = params.TEMP|default(0)|string %}
    	{% set temp=temp.split(',') %}
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=temp0 VALUE={ temp[0]|float }
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=temp1 VALUE={ temp[1]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=temp2 VALUE={ temp[2]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=temp3 VALUE={ temp[3]|float }

    {% set standby = params.STANDBY|default(0)|string %}
    	{% set standby=standby.split(',') %}
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=standby0 VALUE={ standby[0]|float }
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=standby1 VALUE={ standby[1]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=standby2 VALUE={ standby[2]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=standby3 VALUE={ standby[3]|float }

    {% set flbed = params.FLBED|default(0)|string %}
    	{% set flbed=flbed.split(',') %}
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=flbed0 VALUE={ flbed[0]|float }
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=flbed1 VALUE={ flbed[1]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=flbed2 VALUE={ flbed[2]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=flbed3 VALUE={ flbed[3]|float }

    {% set bed = params.BED|default(0)|string %}
    	{% set bed=bed.split(',') %}
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=bed0 VALUE={ bed[0]|float }
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=bed1 VALUE={ bed[1]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=bed2 VALUE={ bed[2]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=bed3 VALUE={ bed[3]|float }

    {% set chamber = params.CHAMBER|default(0)|string %}
    	{% set chamber=chamber.split(',') %}
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=chamber0 VALUE={ chamber[0]|float }
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=chamber1 VALUE={ chamber[1]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=chamber2 VALUE={ chamber[2]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=chamber3 VALUE={ chamber[3]|float }

    {% set filtype = params.FILTYPE|default(0)|string %}
    	{% set filtype=filtype.split(',') %}
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=filtype0 VALUE='"{ filtype[0]|string }"'
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=filtype1 VALUE='"{ filtype[1]|string }"'
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=filtype2 VALUE='"{ filtype[2]|string }"'
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=filtype3 VALUE='"{ filtype[3]|string }"'

    {% set maxfan = params.MAXFAN|default(0)|string %}
    	{% set maxfan=maxfan.split(',') %}
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=maxfan0 VALUE={ maxfan[0]|float }
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=maxfan1 VALUE={ maxfan[1]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=maxfan2 VALUE={ maxfan[2]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=maxfan3 VALUE={ maxfan[3]|float }

    {% set disablefan = params.DISABLEFAN|default(0)|string %}
    	{% set disablefan=disablefan.split(',') %}
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=disablefan0 VALUE={ disablefan[0]|float }
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=disablefan1 VALUE={ disablefan[1]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=disablefan2 VALUE={ disablefan[2]|float }
        SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=disablefan3 VALUE={ disablefan[3]|float }

    {% set first_tool = params.FIRST_TOOL|default(0)|int %}
		SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=first_tool VALUE={ first_tool|int }

[gcode_macro DEFINE_TARGETS]
variable_flbed_target:0
variable_bed_target:0
variable_chamber_target:0
gcode:
    SET_GCODE_VARIABLE MACRO=DEFINE_TARGETS VARIABLE=flbed_target VALUE={[printer["gcode_macro SET_VARS"].flbed0, printer["gcode_macro SET_VARS"].flbed1, printer["gcode_macro SET_VARS"].flbed2, printer["gcode_macro SET_VARS"].flbed3]|max}
    SET_GCODE_VARIABLE MACRO=DEFINE_TARGETS VARIABLE=bed_target VALUE={[printer["gcode_macro SET_VARS"].bed0, printer["gcode_macro SET_VARS"].bed1, printer["gcode_macro SET_VARS"].bed2, printer["gcode_macro SET_VARS"].bed3]|max}
    SET_GCODE_VARIABLE MACRO=DEFINE_TARGETS VARIABLE=chamber_target VALUE={[printer["gcode_macro SET_VARS"].chamber0, printer["gcode_macro SET_VARS"].chamber1, printer["gcode_macro SET_VARS"].chamber2, printer["gcode_macro SET_VARS"].chamber3]|max}

[gcode_macro WARMUP]
variable_messagetemp:0
gcode:
    CANCEL_COOLDOWN # Cancel cooldown from previous print to avoid cooling bed off during this print
    LIGHTS_ON ; turn on chamber lights

    #Determine whether a chamber temp is specified for any filmanent. If so, preheat the chamber before starting the print. Refer to the preheat section.
    {% if printer["gcode_macro DEFINE_TARGETS"].chamber_target > 0 %}
        SET_GCODE_VARIABLE MACRO=WARMUP VARIABLE=messagetemp VALUE={ printer['gcode_macro DEFINE_TARGETS'].chamber_target }
        { action_respond_info("Preheat required: " + messagetemp|string + "C") }
        PREHEAT_60
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={printer["gcode_macro DEFINE_TARGETS"].chamber_target}
    {% endif %}
    M140 S{printer["gcode_macro DEFINE_TARGETS"].flbed_target} ; select the highest first layer bed temp of the 4 tools
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={printer["gcode_macro DEFINE_TARGETS"].flbed_target - 5} MAXIMUM={printer["gcode_macro DEFINE_TARGETS"].flbed_target + 5}

[gcode_macro START_PRINT]
gcode:
    #Load the default mesh profile. As of 2023 this is no longer standard.
    CLEAR_PAUSE
    BED_MESH_PROFILE LOAD=default

    #Set variables based on which tool is selected
    {% if printer["gcode_macro SET_VARS"].first_tool == 1 %}
	{% set first_temp = printer["gcode_macro SET_VARS"].fltemp1 %}
        {% set maxfan = printer["gcode_macro SET_VARS"].maxfan1 %}
        {% set filtype = printer["gcode_macro SET_VARS"].filtype1 %}
        {% set wait_extruder = "extruder1" %}
    {% elif printer["gcode_macro SET_VARS"].first_tool == 2 %}
	{% set first_temp = printer["gcode_macro SET_VARS"].fltemp2 %}
        {% set maxfan = printer["gcode_macro SET_VARS"].maxfan2 %}
        {% set filtype = printer["gcode_macro SET_VARS"].filtype2 %}
        {% set wait_extruder = "extruder2" %}
    {% elif printer["gcode_macro SET_VARS"].first_tool == 3 %}
	{% set first_temp = printer["gcode_macro SET_VARS"].fltemp3 %}
        {% set maxfan = printer["gcode_macro SET_VARS"].maxfan3 %}
        {% set filtype = printer["gcode_macro SET_VARS"].filtype3 %}
        {% set wait_extruder = "extruder3" %}
    {% else %}
	{% set first_temp = printer["gcode_macro SET_VARS"].fltemp0 %}
        {% set maxfan = printer["gcode_macro SET_VARS"].maxfan0 %}
        {% set filtype = printer["gcode_macro SET_VARS"].filtype0 %}
        {% set wait_extruder = "extruder" %}
	{% endif %}

    #M104 T0 S{printer["gcode_macro SET_VARS"].standby0} ; set standby temp for Tool0. Use "None" filament if this extruder is not used
    #M104 T1 S{printer["gcode_macro SET_VARS"].standby1} ; set standby temp for Tool1. Use "None" filament if this extruder is not used
    #M104 T2 S{printer["gcode_macro SET_VARS"].standby2} ; set standby temp for Tool2. Use "None" filament if this extruder is not used
    #M104 T3 S{printer["gcode_macro SET_VARS"].standby3} ; set standby temp for Tool3. Use "None" filament if this extruder is not used
    M104 T{printer["gcode_macro SET_VARS"].first_tool} S{first_temp} ; heat up the first selected tool to printing temperature
    INIT ; run the initialization macro
    T{printer["gcode_macro SET_VARS"].first_tool} ; run the next tool selection macro
    TEMPERATURE_WAIT SENSOR={wait_extruder} MINIMUM={first_temp - 5} MAXIMUM={first_temp + 5}
    PEBBLE_WIPE PEBBLEFILTYPE={filtype} PEBBLEFAN={maxfan * 2.55}; ; run the pebble wiper macro

[gcode_macro AFTER_LAYER_CHANGE]
gcode:
    #PrusaSlicer/SuperSlicer resets temps at layer 2. This code will run at layer 2 to reset back to the standby temps.
    {% set layernum = params.LAYER_NUM|default(1)|int %}
    {% set tool = params.TOOL|default(0)|int %}

    {% if tool == 1 %}
	    {% set temp = printer["gcode_macro SET_VARS"].temp1 %}
    {% elif tool == 2 %}
	    {% set temp = printer["gcode_macro SET_VARS"].temp2 %}
    {% elif tool == 3 %}
	    {% set temp = printer["gcode_macro SET_VARS"].temp3 %}
    {% else %}
	    {% set temp = printer["gcode_macro SET_VARS"].temp0 %}
	{% endif %}

    {% if layernum == 1 %}
        M104 T0 S{printer["gcode_macro SET_VARS"].standby0}
        M104 T1 S{printer["gcode_macro SET_VARS"].standby1}
        M104 T2 S{printer["gcode_macro SET_VARS"].standby2}
        M104 T3 S{printer["gcode_macro SET_VARS"].standby3}
        M104 T{tool} S{temp}
        M140 S{printer["gcode_macro DEFINE_TARGETS"].bed_target}
    {% endif %}

[gcode_macro TOOL_CHANGE]
# Toolchange macro separated into 2 pieces. First piece moves printhead off of the print, second piece updates temperatures, fan speeds, and runs the pebble wipe
gcode:
    {% set layernum = params.LAYER_NUM|default(1)|int %}
    {% set current_tool = params.CURRENT_TOOL|default(0)|int %}
    {% set next_tool = params.NEXT_TOOL|default(0)|int %}

    #Check if the layer is -1. If so, stop the toolchange process as it is a bug in the slicer and causes a second toolchange before the print starts
    {% if layernum == -1 %}
    {% else %}
        G92 E0 ; set extruder value back to 0
        G1 E-4 F500 ; retract 4mm at speed of 500mms
        T{next_tool} ; select the next extruder
        TOOL_CHANGE2 LAYER_NUM={layernum} CURRENT_TOOL={current_tool} NEXT_TOOL={next_tool}
    {% endif %}

[gcode_macro TOOL_CHANGE2]
# Toolchange macro separated into 2 pieces. First piece moves printhead off of the print, second piece updates temperatures, fan speeds, and runs the pebble wipe
gcode:
    {% set layernum = params.LAYER_NUM|default(1)|int %}
    {% set current_tool = params.CURRENT_TOOL|default(0)|int %}
    {% set next_tool = params.NEXT_TOOL|default(0)|int %}

    #Select the standby temp depending on which tool we're dropping off
    {% if current_tool == 1 %}
        {% set standby = printer["gcode_macro SET_VARS"].standby1 %}
    {% elif current_tool == 2 %}
        {% set standby = printer["gcode_macro SET_VARS"].standby2 %}
    {% elif current_tool == 3 %}
        {% set standby = printer["gcode_macro SET_VARS"].standby3 %}
    {% else %}
        {% set standby = printer["gcode_macro SET_VARS"].standby0 %}
    {% endif %}
        
    #Select the first layer temp, regular temp, filament type depending on which tool is next
    {% if next_tool == 1 %}
        {% set fltemp = printer["gcode_macro SET_VARS"].fltemp1 %}
        {% set temp = printer["gcode_macro SET_VARS"].temp1 %}
        {% set filtype = printer["gcode_macro SET_VARS"].filtype1 %}
        {% set maxfan = printer["gcode_macro SET_VARS"].maxfan1 %}
        {% set disablefan = printer["gcode_macro SET_VARS"].disablefan1 %}
        {% set wait_extruder = "extruder1" %}
    {% elif next_tool == 2 %}
        {% set fltemp = printer["gcode_macro SET_VARS"].fltemp2 %}
        {% set temp = printer["gcode_macro SET_VARS"].temp2 %}
        {% set filtype = printer["gcode_macro SET_VARS"].filtype2 %}
        {% set maxfan = printer["gcode_macro SET_VARS"].maxfan2 %}
        {% set disablefan = printer["gcode_macro SET_VARS"].disablefan2 %}
        {% set wait_extruder = "extruder2" %}
    {% elif next_tool == 3 %}
        {% set fltemp = printer["gcode_macro SET_VARS"].fltemp3 %}
        {% set temp = printer["gcode_macro SET_VARS"].temp3 %}
        {% set filtype = printer["gcode_macro SET_VARS"].filtype3 %}
        {% set maxfan = printer["gcode_macro SET_VARS"].maxfan3 %}
        {% set disablefan = printer["gcode_macro SET_VARS"].disablefan3 %}
        {% set wait_extruder = "extruder3" %}
    {% else %}
        {% set fltemp = printer["gcode_macro SET_VARS"].fltemp0 %}
        {% set temp = printer["gcode_macro SET_VARS"].temp0 %}
        {% set filtype = printer["gcode_macro SET_VARS"].filtype0 %}
        {% set maxfan = printer["gcode_macro SET_VARS"].maxfan0 %}
        {% set disablefan = printer["gcode_macro SET_VARS"].disablefan0 %}
        {% set wait_extruder = "extruder" %}
    {% endif %}

    #Select the next tool's temp depending on whether it's the first layer or not
    {% if layernum <= 1 %}
        {% set nexttemp = fltemp %}
    {% else %}
        {% set nexttemp = temp %}
    {% endif %}

    M104 T{current_tool} S{standby} ; set the current extruder to standby temps
    M104 T{next_tool} S{nexttemp} ; start heating the next extruder

    {% if layernum > disablefan %}
        M106 S{maxfan * 2.55}
    {% endif %} ; turn on the part cooling fan

    TEMPERATURE_WAIT SENSOR={wait_extruder} MINIMUM={nexttemp - 5} MAXIMUM={nexttemp + 5}
    PEBBLE_WIPE PEBBLEFILTYPE={filtype} PEBBLEFAN={maxfan * 2.55}; run the pebble wiper macro

[gcode_macro END_PRINT]
gcode:
    TURN_OFF_HEATERS ; turn off all heaters
    M107 P0 ; turn off fan
    M107 P1 ; turn off fan
    M107 P2 ; turn off fan
    M107 P3 ; turn off fan
    G92 E0 ; reset extruder to 0
    G1 E-3 F100 ; retract 3mm at speed of 100mms
    G91 ; change to relative mode
    G1 Z5 ; drop the bed 5mm relative
    G90 ; change to absolute mode
    TOOL_DROPOFF ; drop off the current tool
    G0 X-12 Y-41 F7900 ; return home
    G1 Z1 ; raise the bed
	{% if printer["gcode_macro DEFINE_TARGETS"].chamber_target > 0 %} ; check if a chamber target was specified for any of the filaments. If so, do a gradual cooldown to reduce warping
        { action_respond_info("Cooling down") }
        UPDATE_DELAYED_GCODE ID=delayed_cooldown DURATION=1
    {% endif %}
    M84 S600 ; disable motors after ten mins of inactivity

[gcode_macro CHANGE_TEMP]
gcode:
    {% set T0_TEMP = params.T0_TEMP|default(printer["gcode_macro SET_VARS"].temp0)|float %}
    {% set T1_TEMP = params.T1_TEMP|default(printer["gcode_macro SET_VARS"].temp1)|float %}
    {% set T2_TEMP = params.T2_TEMP|default(printer["gcode_macro SET_VARS"].temp2)|float %}
    {% set T3_TEMP = params.T3_TEMP|default(printer["gcode_macro SET_VARS"].temp3)|float %}
        
    SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=temp0 VALUE={T0_TEMP}
	SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=temp1 VALUE={T1_TEMP}
    SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=temp2 VALUE={T2_TEMP}
    SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=temp3 VALUE={T3_TEMP}

    {% if printer.toolhead.extruder == "extruder1" %}
        M104 S{T1_TEMP}
    {% elif printer.toolhead.extruder == "extruder2" %}
        M104 S{T2_TEMP}
    {% elif printer.toolhead.extruder == "extruder3" %}
        M104 S{T3_TEMP}
    {% else %}
        M104 S{T0_TEMP}
    {% endif %}

[gcode_macro CHANGE_STANDBY]
gcode:
    {% set T0_STANDBY = params.T0_STANDBY|default(printer["gcode_macro SET_VARS"].standby0)|float %}
    {% set T1_STANDBY = params.T1_STANDBY|default(printer["gcode_macro SET_VARS"].standby1)|float %}
    {% set T2_STANDBY = params.T2_STANDBY|default(printer["gcode_macro SET_VARS"].standby2)|float %}
    {% set T3_STANDBY = params.T3_STANDBY|default(printer["gcode_macro SET_VARS"].standby3)|float %}

    SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=standby0 VALUE={T0_STANDBY}
	SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=standby1 VALUE={T1_STANDBY}
    SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=standby2 VALUE={T2_STANDBY}
    SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=standby3 VALUE={T3_STANDBY}

    {% if printer.toolhead.extruder == "extruder1" %}
        M104 S{T0_STANDBY} T0
        M104 S{T2_STANDBY} T2
        M104 S{T3_STANDBY} T3
    {% elif printer.toolhead.extruder == "extruder2" %}
        M104 S{T0_STANDBY} T0
        M104 S{T1_STANDBY} T1
        M104 S{T3_STANDBY} T3
    {% elif printer.toolhead.extruder == "extruder3" %}
        M104 S{T0_STANDBY} T0
        M104 S{T1_STANDBY} T1
        M104 S{T2_STANDBY} T2
    {% else %}
        M104 S{T1_STANDBY} T1
        M104 S{T2_STANDBY} T2
        M104 S{T3_STANDBY} T3
    {% endif %}

[gcode_macro CANCEL_STANDBY]
gcode:
    SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=standby0 VALUE={printer["gcode_macro SET_VARS"].temp0}
	SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=standby1 VALUE={printer["gcode_macro SET_VARS"].temp1}
    SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=standby2 VALUE={printer["gcode_macro SET_VARS"].temp2}
    SET_GCODE_VARIABLE MACRO=SET_VARS VARIABLE=standby3 VALUE={printer["gcode_macro SET_VARS"].temp3}

[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    M106 S0
	G91;
	G1 Z5; #Drop the Z 5mm relative
    G90;
    TOOL_DROPOFF
    G0 X-12 Y-41 F7900; return home
    G1 Z1; #Raise Z
    M84 S600; disable motors after ten mins of inactivity

[gcode_macro PAUSE_PRINT]
gcode:
#	{% set T0_STANDBY = params.T0_STANDBY|default(printer["gcode_macro SET_VARS"].standby0)|float %}
#    {% set T1_STANDBY = params.T1_STANDBY|default(printer["gcode_macro SET_VARS"].standby1)|float %}
#    {% set T2_STANDBY = params.T2_STANDBY|default(printer["gcode_macro SET_VARS"].standby2)|float %}
#    {% set T3_STANDBY = params.T3_STANDBY|default(printer["gcode_macro SET_VARS"].standby3)|float %}

#    G91;
#	G1 Z5; #Drop the Z 5mm relative
#    G90;
    G0 X0 Y0 F30000; #return home
    {% set timeout = printer.configfile.settings.idle_timeout.timeout %}
    {% if timeout < 3600 %}
        SET_IDLE_TIMEOUT TIMEOUT=3600 #Sets timeout to 60 minutes if current setting is less than that
    {% else %}
        SET_IDLE_TIMEOUT TIMEOUT={timeout} #Use timeout if more than 60 minutes
    {% endif %}
    #SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{printer[printer.toolhead.extruder].target}"
#    M104 S{T1_STANDBY} T0
#    M104 S{T1_STANDBY} T1
#    M104 S{T2_STANDBY} T2
#    M104 S{T3_STANDBY} T3
    PAUSE

[gcode_macro RESUME_PRINT]
gcode:
    {% set layernum = params.LAYER_NUM|default(1)|int %}
    {% set current_tool = params.CURRENT_TOOL|default(0)|int %}
    
    #Select the first layer temp, regular temp, filament type depending on which tool is selected
    {% if current_tool == 1 %}
        {% set fltemp = printer["gcode_macro SET_VARS"].fltemp1 %}
        {% set temp = printer["gcode_macro SET_VARS"].temp1 %}
        {% set filtype = printer["gcode_macro SET_VARS"].filtype1 %}
        {% set maxfan = printer["gcode_macro SET_VARS"].maxfan1 %}
        {% set wait_extruder = "extruder1" %}
    {% elif current_tool == 2 %}
        {% set fltemp = printer["gcode_macro SET_VARS"].fltemp2 %}
        {% set temp = printer["gcode_macro SET_VARS"].temp2 %}
        {% set filtype = printer["gcode_macro SET_VARS"].filtype2 %}
        {% set maxfan = printer["gcode_macro SET_VARS"].maxfan2 %}
        {% set wait_extruder = "extruder2" %}
    {% elif current_tool == 3 %}
        {% set fltemp = printer["gcode_macro SET_VARS"].fltemp3 %}
        {% set temp = printer["gcode_macro SET_VARS"].temp3 %}
        {% set filtype = printer["gcode_macro SET_VARS"].filtype3 %}
        {% set maxfan = printer["gcode_macro SET_VARS"].maxfan3 %}
        {% set wait_extruder = "extruder3" %}
    {% else %}
        {% set fltemp = printer["gcode_macro SET_VARS"].fltemp0 %}
        {% set temp = printer["gcode_macro SET_VARS"].temp0 %}
        {% set filtype = printer["gcode_macro SET_VARS"].filtype0 %}
        {% set maxfan = printer["gcode_macro SET_VARS"].maxfan0 %}
        {% set wait_extruder = "extruder" %}
    {% endif %}

    #Select the temp depending on whether it's the first layer or not
    {% if layernum <= 1 %}
        {% set nexttemp = fltemp %}
    {% else %}
        {% set nexttemp = temp %}
    {% endif %}

    TEMPERATURE_WAIT SENSOR={wait_extruder} MINIMUM={nexttemp - 5} MAXIMUM={nexttemp + 5}
    PEBBLE_WIPE PEBBLEFILTYPE={filtype} PEBBLEFAN={maxfan * 2.55}; run the pebble wiper macro
    RESUME
